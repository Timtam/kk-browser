name: "build"

on:
  push:
  pull_request: {}

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          # releaseName: "App v__VERSION__"
          # releaseBody: "See the assets to download this version and install."
          # releaseDraft: true
          # prerelease: false
          # compile a universal binary for intel + apple sillicon
          args: ${{ matrix.platform == 'macos-latest' && '--target universal-apple-darwin' || '' }}
      - uses: actions/upload-artifact@v4
        if: matrix.platform == 'macos-latest'
        with:
          name: binaries-macos
          path: |
            ${{ github.workspace }}/src-tauri/target/universal-apple-darwin/release/bundle/**/*.dmg

      - uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: binaries-windows
          path: |
            ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.exe
